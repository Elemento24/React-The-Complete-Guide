{"ast":null,"code":"var _jsxFileName = \"/home/elemento/Elemento/WebDev/Udemy/ReactGuide/(23)Next/next-app/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\n\nclass IndexPage extends Component {\n  // static async getInitialProps(context) {\n  //   console.log(context);\n  //   return { appName: 'Super App' };\n  // }\n  // It is a super-important LifeCycle Hook, where it pre-populates the results of the promises, which we provide or provided by some other package, and then wait for it to be resolved, and once it's done, then it returns the results.\n  static getInitialProps(context) {\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve({\n          appName: 'Super App'\n        });\n      }, 1000);\n    });\n    return promise;\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"The Main Page of \", this.props.appName), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, \"Go to \", __jsx(Link, {\n      href: \"/auth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 18\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 37\n      }\n    }, \"Auth\"))), __jsx(\"button\", {\n      onClick: () => Router.push('/auth'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"Go to Auth\"));\n  }\n\n}\n\nexport default IndexPage;","map":{"version":3,"sources":["/home/elemento/Elemento/WebDev/Udemy/ReactGuide/(23)Next/next-app/pages/index.js"],"names":["React","Component","Link","Router","IndexPage","getInitialProps","context","promise","Promise","resolve","reject","setTimeout","appName","render","props","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChC;AACA;AACA;AACA;AAEA;AACA,SAAOI,eAAP,CAAuBC,OAAvB,EAAgC;AAC9B,UAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/CC,MAAAA,UAAU,CAAC,MAAM;AACfF,QAAAA,OAAO,CAAC;AAAEG,UAAAA,OAAO,EAAE;AAAX,SAAD,CAAP;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAJe,CAAhB;AAKA,WAAOL,OAAP;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAsB,KAAKC,KAAL,CAAWF,OAAjC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAS,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAnB,CAAT,CAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,MAAMT,MAAM,CAACY,IAAP,CAAY,OAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF;AAOD;;AAxB+B;;AA2BlC,eAAeX,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\n\nclass IndexPage extends Component {\n  // static async getInitialProps(context) {\n  //   console.log(context);\n  //   return { appName: 'Super App' };\n  // }\n\n  // It is a super-important LifeCycle Hook, where it pre-populates the results of the promises, which we provide or provided by some other package, and then wait for it to be resolved, and once it's done, then it returns the results.\n  static getInitialProps(context) {\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve({ appName: 'Super App' })\n      }, 1000)\n    });\n    return promise;\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>The Main Page of {this.props.appName}</h1>\n        <p>Go to <Link href=\"/auth\"><a>Auth</a></Link></p>\n        <button onClick={() => Router.push('/auth')}>Go to Auth</button>\n      </div>\n    );\n  }\n}\n\nexport default IndexPage;"]},"metadata":{},"sourceType":"module"}